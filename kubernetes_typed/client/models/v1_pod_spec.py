# Code generated by `typeddictgen`. DO NOT EDIT.
"""V1PodSpecType generated type."""
# pylint: disable=too-many-instance-attributes
from dataclasses import dataclass
from typing import Dict, List

from .v1_affinity import V1AffinityType
from .v1_container import V1ContainerType
from .v1_pod_dns_config import V1PodDNSConfigType
from .v1_ephemeral_container import V1EphemeralContainerType
from .v1_host_alias import V1HostAliasType
from .v1_local_object_reference import V1LocalObjectReferenceType
from .v1_pod_os import V1PodOSType
from .v1_pod_readiness_gate import V1PodReadinessGateType
from .v1_pod_resource_claim import V1PodResourceClaimType
from .v1_pod_scheduling_gate import V1PodSchedulingGateType
from .v1_pod_security_context import V1PodSecurityContextType
from .v1_toleration import V1TolerationType
from .v1_topology_spread_constraint import V1TopologySpreadConstraintType
from .v1_volume import V1VolumeType


@dataclass
class V1PodSpecType:
    active_deadline_seconds: int
    affinity: V1AffinityType
    automount_service_account_token: bool
    containers: List[V1ContainerType]
    dns_config: V1PodDNSConfigType
    dns_policy: str
    enable_service_links: bool
    ephemeral_containers: List[V1EphemeralContainerType]
    host_aliases: List[V1HostAliasType]
    host_ipc: bool
    host_network: bool
    host_pid: bool
    host_users: bool
    hostname: str
    image_pull_secrets: List[V1LocalObjectReferenceType]
    init_containers: List[V1ContainerType]
    node_name: str
    node_selector: Dict[str, str]
    os: V1PodOSType
    overhead: Dict[str, str]
    preemption_policy: str
    priority: int
    priority_class_name: str
    readiness_gates: List[V1PodReadinessGateType]
    resource_claims: List[V1PodResourceClaimType]
    restart_policy: str
    runtime_class_name: str
    scheduler_name: str
    scheduling_gates: List[V1PodSchedulingGateType]
    security_context: V1PodSecurityContextType
    service_account: str
    service_account_name: str
    set_hostname_as_fqdn: bool
    share_process_namespace: bool
    subdomain: str
    termination_grace_period_seconds: int
    tolerations: List[V1TolerationType]
    topology_spread_constraints: List[V1TopologySpreadConstraintType]
    volumes: List[V1VolumeType]
